/**
 * @author Emilie Wirbel
 *
 * This file was generated by Aldebaran Robotics ModuleGenerator
 */

#ifndef SOURCELOCALIZATION_SOURCELOCALIZATION_H
#define SOURCELOCALIZATION_SOURCELOCALIZATION_H

#include <boost/shared_ptr.hpp>
#include <alcommon/almodule.h>
#include <string>
#include <alproxies/almemoryproxy.h>
#include <alproxies/altexttospeechproxy.h>
#include <althread/almutex.h>
#include <signal.h>
#include <boost/shared_ptr.hpp>
#include <alcommon/albroker.h>
#include <alcommon/albrokermanager.h>
#include <alcommon/altoolsmain.h>
#include <iostream>
#include <alproxies/alaudiosourcelocalizationproxy.h>
#include <alerror/alerror.h>
#include <alproxies/almotionproxy.h>
#include <alcommon/alproxy.h>
#include <alcommon/albroker.h>




namespace AL
{
  class ALBroker;
}

class SourceLocalization : public AL::ALModule
{
  public:

    SourceLocalization(boost::shared_ptr<AL::ALBroker> broker, const std::string& name);

    virtual ~SourceLocalization();

    /** Overloading ALModule::init().
    * This is called right after the module has been loaded
    */
    virtual void init();

    /**
    * This method will be called every time the event RightBumperPressed is raised.
    */
    void soundLocated();
  private:
   	AL::ALMemoryProxy memory;
    AL::ALTextToSpeechProxy tts;
	AL::ALAudioSourceLocalizationProxy audio;
	AL::ALMotionProxy motion;

    boost::shared_ptr<AL::ALMutex> fCallbackMutex;

    float fState;
};

#endif  // SOURCELOCALIZATION_SOURCELOCALIZATION

